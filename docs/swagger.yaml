definitions:
  models.Student:
    properties:
      code:
        type: string
      created_at:
        type: string
      deleted_at:
        description: Soft delete
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs in with email and password, returns a JWT token
      parameters:
      - description: User Login Information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid credentials
          schema:
            type: string
      summary: Login a user and get JWT token
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with email and password
      parameters:
      - description: User Information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
      summary: Register a new user
      tags:
      - Auth
  /students:
    get:
      consumes:
      - application/json
      description: Tüm öğrencileri getirir
      produces:
      - application/json
      responses:
        "200":
          description: List of students
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
        "500":
          description: Failed to fetch students
          schema:
            type: string
      summary: Öğrencileri getir
      tags:
      - Students
    post:
      consumes:
      - application/json
      description: Yeni bir öğrenci oluşturur
      parameters:
      - description: Öğrenci Bilgileri
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: Student created successfully
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Invalid input data
          schema:
            type: string
        "500":
          description: Failed to create student
          schema:
            type: string
      summary: Öğrenci oluşturma
      tags:
      - Students
  /students/{id}:
    delete:
      consumes:
      - application/json
      description: Öğrenciyi siler (soft delete)
      parameters:
      - description: Öğrenci ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Student deleted successfully
          schema:
            type: string
        "404":
          description: Student not found
          schema:
            type: string
      summary: Öğrenci silme
      tags:
      - Students
    get:
      consumes:
      - application/json
      description: ID'ye göre öğrenci bilgilerini getirir
      parameters:
      - description: Öğrenci ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Student found
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Student not found
          schema:
            type: string
      summary: Öğrenci bilgilerini getir
      tags:
      - Students
    put:
      consumes:
      - application/json
      description: Var olan bir öğrencinin bilgilerini günceller
      parameters:
      - description: Öğrenci ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: Student updated successfully
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Invalid input data
          schema:
            type: string
        "404":
          description: Student not found
          schema:
            type: string
      summary: Öğrenci bilgilerini güncelle
      tags:
      - Students
swagger: "2.0"
